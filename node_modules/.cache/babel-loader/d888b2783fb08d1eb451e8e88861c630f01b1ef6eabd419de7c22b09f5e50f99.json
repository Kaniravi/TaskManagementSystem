{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hi\\\\Desktop\\\\React\\\\task-management-system\\\\src\\\\admin\\\\AddProject.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: '',\n  Description: '',\n  Requirement: '',\n  Deadline: ''\n};\nconst AddProject = () => {\n  _s();\n  const [project, setProject] = useState(initialState);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"body\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: \"Add Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"projectName\",\n            className: \"label\",\n            children: \"ProjectName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"text\",\n            id: \"projectName\",\n            name: \"projectName\",\n            value: project.projectName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(AddProject, \"Ds9pSPCYYO8nKagl+Q9U/NPLz88=\");\n_c = AddProject;\nexport default AddProject;\nvar _c;\n$RefreshReg$(_c, \"AddProject\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialState","name","Description","Requirement","Deadline","AddProject","_s","project","setProject","Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","projectName","_c","$RefreshReg$"],"sources":["C:/Users/Hi/Desktop/React/task-management-system/src/admin/AddProject.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst initialState ={\r\n    name:'',\r\n    Description:'',\r\n    Requirement:'',\r\n    Deadline:''\r\n}\r\nconst AddProject = () =>{\r\n    const[project,setProject] = useState(initialState);\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"form\">\r\n                <body>\r\n                    <form>\r\n                        <h1 className=\"title\">Add Project</h1>\r\n                        \r\n\r\n                        <label htmlFor=\"projectName\" className=\"label\">ProjectName</label>\r\n                        <input\r\n                            className=\"input\"\r\n                            type=\"text\"\r\n                            id =\"projectName\"\r\n                            name=\"projectName\"\r\n                            value={project.projectName}\r\n                        >\r\n                        </input>\r\n                    </form>\r\n                </body>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AddProject;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,YAAY,GAAE;EAChBC,IAAI,EAAC,EAAE;EACPC,WAAW,EAAC,EAAE;EACdC,WAAW,EAAC,EAAE;EACdC,QAAQ,EAAC;AACb,CAAC;AACD,MAAMC,UAAU,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACpB,MAAK,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGX,QAAQ,CAACG,YAAY,CAAC;EAClD,oBACID,OAAA,CAACH,KAAK,CAACa,QAAQ;IAAAC,QAAA,eACXX,OAAA;MAAKY,SAAS,EAAC,MAAM;MAAAD,QAAA,eACjBX,OAAA;QAAAW,QAAA,eACIX,OAAA;UAAAW,QAAA,gBACIX,OAAA;YAAIY,SAAS,EAAC,OAAO;YAAAD,QAAA,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAGtChB,OAAA;YAAOiB,OAAO,EAAC,aAAa;YAACL,SAAS,EAAC,OAAO;YAAAD,QAAA,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAClEhB,OAAA;YACIY,SAAS,EAAC,OAAO;YACjBM,IAAI,EAAC,MAAM;YACXC,EAAE,EAAE,aAAa;YACjBjB,IAAI,EAAC,aAAa;YAClBkB,KAAK,EAAEZ,OAAO,CAACa;UAAY;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAExB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEzB,CAAC;AAAAT,EAAA,CAxBKD,UAAU;AAAAgB,EAAA,GAAVhB,UAAU;AA0BhB,eAAeA,UAAU;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}