{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hi\\\\Desktop\\\\React\\\\task-management-system\\\\src\\\\employee\\\\UpdateProjectStatus.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateProjectStatus = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    employeeName\n  } = useParams();\n  const [project, setProject] = useState([]);\n  useEffect(() => {\n    const fetchProjectDetails = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/employee/getProject/${employeeName}`);\n        console.log(\"Project fetched successfully: \", response.data);\n        setProject(response.data);\n      } catch (error) {\n        console.log(\"Error fetching project: \", error);\n      }\n    };\n    fetchProjectDetails();\n  }, [employeeName]);\n  const handleInputChange = e => {\n    setProject({\n      ...project,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleClick = e => {\n    e.preventDefault();\n    navigate(`/employeePage/${employeeName}`);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(`http://localhost:8080/employee/updateProjectStatus/${project.id}`, project);\n      console.log(\"Updated successfully\", response.data);\n    } catch (error) {\n      console.log(\"Error updating status: \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formManager\",\n      children: /*#__PURE__*/_jsxDEV(\"body\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: \"Update Project Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"labelMan\",\n            children: \"Project Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputMan\",\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            value: project.name,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            className: \"labelMan\",\n            children: \"Project Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"inputNarrowMan\",\n            id: \"description\",\n            name: \"description\",\n            value: project.description || \"\",\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"requirement\",\n            className: \"labelMan\",\n            children: \"Project Requirement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"inputNarrowMan\",\n            id: \"requirement\",\n            name: \"requirement\",\n            value: project.requirement || \"\",\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"projectCreatedDate\",\n            className: \"labelMan\",\n            children: \"Project Created Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputMan\",\n            type: \"date\",\n            id: \"projectCreatedDate\",\n            name: \"projectCreatedDate\",\n            value: project.projectCreatedDate || \"\",\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"deadline\",\n            className: \"labelMan\",\n            children: \"Project Deadline Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputMan\",\n            type: \"date\",\n            id: \"deadline\",\n            name: \"deadline\",\n            value: project.deadline || \"\",\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"projectStatus\",\n            className: \"labelMan\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputMan\",\n            type: \"text\",\n            id: \"projectStatus\",\n            name: \"projectStatus\",\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnPro\",\n            children: \"Add Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnPro\",\n            onClick: handleClick,\n            children: \"Back to Employee Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdateProjectStatus, \"jbLUZQZC/Q5ayd+yJJViMoUqerI=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = UpdateProjectStatus;\nexport default UpdateProjectStatus;\nvar _c;\n$RefreshReg$(_c, \"UpdateProjectStatus\");","map":{"version":3,"names":["React","useParams","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","UpdateProjectStatus","_s","navigate","employeeName","project","setProject","fetchProjectDetails","response","get","console","log","data","error","handleInputChange","e","target","name","value","handleClick","preventDefault","handleSubmit","post","id","Fragment","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","readOnly","description","requirement","projectCreatedDate","deadline","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Hi/Desktop/React/task-management-system/src/employee/UpdateProjectStatus.js"],"sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState , useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst UpdateProjectStatus  = () =>{\r\n    const navigate = useNavigate();\r\n    const {employeeName} = useParams();\r\n    const[project,setProject] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const fetchProjectDetails = async() =>{\r\n            try{\r\n                const response = await axios.get(`http://localhost:8080/employee/getProject/${employeeName}`);\r\n                console.log(\"Project fetched successfully: \", response.data);\r\n                setProject(response.data);\r\n            }\r\n            catch(error){\r\n                console.log(\"Error fetching project: \",error);\r\n            }\r\n        }\r\n        fetchProjectDetails();\r\n    },[employeeName]);\r\n\r\n    const handleInputChange = (e) =>{\r\n        setProject({...project,[e.target.name]:e.target.value});\r\n    }\r\n\r\n    const handleClick = (e) =>{\r\n        e.preventDefault();\r\n        navigate(`/employeePage/${employeeName}`);\r\n        \r\n    }\r\n\r\n    const handleSubmit = async(e) =>{\r\n        e.preventDefault();\r\n        try{\r\n            const response = await axios.post(`http://localhost:8080/employee/updateProjectStatus/${project.id}`, project);\r\n            console.log(\"Updated successfully\", response.data);\r\n            \r\n        }\r\n        catch(error){\r\n            console.log(\"Error updating status: \", error);\r\n        }\r\n    }\r\n    return(\r\n        <React.Fragment>\r\n             <div className=\"formManager\">\r\n                <body>\r\n                    <form onSubmit ={handleSubmit}>\r\n                        <h1 className=\"title\">Update Project Status</h1>\r\n\r\n                        <label htmlFor=\"name\" className=\"labelMan\">\r\n                            Project Name\r\n                        </label>\r\n                        <input\r\n                            className=\"inputMan\"\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            value={project.name}\r\n                            readOnly\r\n                        />\r\n\r\n                        <label htmlFor=\"description\" className=\"labelMan\">\r\n                            Project Description\r\n                        </label>\r\n                        <textarea\r\n                            className=\"inputNarrowMan\"\r\n                            id=\"description\"\r\n                            name=\"description\"\r\n                            value={project.description || \"\"}\r\n                            readOnly\r\n                        ></textarea>\r\n\r\n                        <label htmlFor=\"requirement\" className=\"labelMan\">\r\n                            Project Requirement\r\n                        </label>\r\n                        <textarea\r\n                            className=\"inputNarrowMan\"\r\n                            id=\"requirement\"\r\n                            name=\"requirement\"\r\n                            value={project.requirement || \"\"}\r\n                            readOnly\r\n                        ></textarea>\r\n\r\n                        <label htmlFor=\"projectCreatedDate\" className=\"labelMan\">\r\n                            Project Created Date\r\n                        </label>\r\n                        <input\r\n                            className=\"inputMan\"\r\n                            type=\"date\"\r\n                            id=\"projectCreatedDate\"\r\n                            name=\"projectCreatedDate\"\r\n                            value={project.projectCreatedDate || \"\"}\r\n                            readOnly\r\n                        />\r\n\r\n                        <label htmlFor=\"deadline\" className=\"labelMan\">\r\n                            Project Deadline Date\r\n                        </label>\r\n                        <input\r\n                            className=\"inputMan\"\r\n                            type=\"date\"\r\n                            id=\"deadline\"\r\n                            name=\"deadline\"\r\n                            value={project.deadline || \"\"}\r\n                            readOnly\r\n                        />\r\n\r\n                        <label htmlFor=\"projectStatus\" className=\"labelMan\">\r\n                            Status\r\n                        </label>\r\n                        <input\r\n                            className=\"inputMan\"\r\n                            type=\"text\"\r\n                            id=\"projectStatus\"\r\n                            name=\"projectStatus\"\r\n                            \r\n                            onChange={handleInputChange}\r\n                        />\r\n\r\n                        <button className=\"btnPro\" >\r\n                            Add Project \r\n                        </button>\r\n                        <button className=\"btnPro\" onClick={handleClick}>\r\n                            Back to Employee Page\r\n                        </button>\r\n                    </form>\r\n                </body>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProjectStatus;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}