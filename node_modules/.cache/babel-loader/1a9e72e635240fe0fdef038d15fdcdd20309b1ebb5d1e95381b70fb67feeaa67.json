{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hi\\\\Desktop\\\\React\\\\task-management-system\\\\src\\\\manager\\\\ManagerProjectTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManagerProjectTable = props => {\n  _s();\n  const {\n    managerName\n  } = props;\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    const fetchManager = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/admin/getProject/${managerName}`);\n        console.log(\"Fetched Manager Successfully\", response.data);\n        const filteredProjects = response.data.filter(project => managerName === project.managerName);\n        setProjects(filteredProjects);\n      } catch (error) {\n        console.log(\"Error fetching manager: \", error);\n      }\n    };\n    fetchManager();\n  }, [managerName]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"tableHeading\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ProjectId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"tableBody\",\n        children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"tableRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: project.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: project.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: project.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: project.projectStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)]\n        }, project.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(ManagerProjectTable, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c = ManagerProjectTable;\nexport default ManagerProjectTable;\nvar _c;\n$RefreshReg$(_c, \"ManagerProjectTable\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ManagerProjectTable","props","_s","managerName","projects","setProjects","fetchManager","response","get","console","log","data","filteredProjects","filter","project","error","Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","id","name","description","projectStatus","_c","$RefreshReg$"],"sources":["C:/Users/Hi/Desktop/React/task-management-system/src/manager/ManagerProjectTable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ManagerProjectTable = (props) => {\r\n    const { managerName } = props;\r\n    const [projects, setProjects] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchManager = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8080/admin/getProject/${managerName}`);\r\n                console.log(\"Fetched Manager Successfully\", response.data);\r\n                const filteredProjects = response.data.filter(project => managerName === project.managerName);\r\n                setProjects(filteredProjects);\r\n            } catch (error) {\r\n                console.log(\"Error fetching manager: \", error);\r\n            }\r\n        }\r\n\r\n        fetchManager();\r\n    }, [managerName]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <table className=\"table\">\r\n                <thead className=\"tableHeading\">\r\n                    <tr>\r\n                        <th>ProjectId</th>\r\n                        <th>Project Name</th>\r\n                        <th>Project Description</th>\r\n                        {/* ... (other headers) */}\r\n                        <th>Project Status</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"tableBody\">\r\n                    {projects.map((project, index) => (\r\n                        <tr key={project.id} className=\"tableRow\">\r\n                            <td>{project.id}</td>\r\n                            <td>{project.name}</td>\r\n                            <td>{project.description}</td>\r\n                            {/* ... (other columns) */}\r\n                            <td>{project.projectStatus}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ManagerProjectTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}