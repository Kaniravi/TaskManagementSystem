{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hi\\\\Desktop\\\\React\\\\task-management-system\\\\src\\\\manager\\\\ManagerProjectTable.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  id: \"\",\n  name: \"\",\n  description: \"\",\n  requirement: \"\",\n  managerAssignStatus: \"\",\n  managerName: \"\",\n  employeeAssignStatus: \"\",\n  employeeName: \"\",\n  projectCreatedDate: \"\",\n  projectAssignDate: \"\",\n  deadline: \"\",\n  projectStatus: \"\"\n};\nconst ManagerProjectTable = props => {\n  _s();\n  const {\n    managerName\n  } = props;\n  console.log(managerName);\n  const [projects, setProjects] = useState([initialState]);\n  useEffect(() => {\n    const fetchManagerProjects = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/admin/getProjectByName`);\n        console.log(\"Fetched Manager Projects Successfully\", response.data);\n        setProjects(response);\n      } catch (error) {\n        console.error(\"Error fetching manager projects: \", error);\n      }\n    };\n    fetchManagerProjects();\n  }, [managerName]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"tableHeading\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ProjectId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project Requirement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Manager Assign Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Manager Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee Assign Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Porject Created Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project Assign Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project Deadline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"tableBody\",\n        children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: managerName === projects.managerName && /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"tableRow\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: project.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: project.requirement\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: project.managerAssignStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: project.managerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: project.employeeAssignStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: project.employeeName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: project.projectCreatedDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: project.projectAssignDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: project.deadline\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: project.projectStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this)\n        }, project.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(ManagerProjectTable, \"9G+17oDYEtiu3EM2PGSQNbKmKfY=\");\n_c = ManagerProjectTable;\nexport default ManagerProjectTable;\nvar _c;\n$RefreshReg$(_c, \"ManagerProjectTable\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","initialState","id","name","description","requirement","managerAssignStatus","managerName","employeeAssignStatus","employeeName","projectCreatedDate","projectAssignDate","deadline","projectStatus","ManagerProjectTable","props","_s","console","log","projects","setProjects","fetchManagerProjects","response","get","data","error","Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","project","index","_c","$RefreshReg$"],"sources":["C:/Users/Hi/Desktop/React/task-management-system/src/manager/ManagerProjectTable.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState , useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst initialState = {\r\n    id: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    requirement: \"\",\r\n    managerAssignStatus: \"\",\r\n    managerName: \"\",\r\n    employeeAssignStatus: \"\",\r\n    employeeName: \"\",\r\n    projectCreatedDate: \"\",\r\n    projectAssignDate: \"\",\r\n    deadline: \"\",\r\n    projectStatus: \"\"\r\n};\r\n\r\n\r\nconst ManagerProjectTable = (props) =>{\r\n   \r\n    \r\n    const{managerName} = props;\r\n    console.log(managerName);\r\n\r\n    const [projects, setProjects] = useState([initialState]);\r\n\r\n    useEffect(() => {\r\n        const fetchManagerProjects = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8080/admin/getProjectByName`);\r\n                console.log(\"Fetched Manager Projects Successfully\", response.data);\r\n              \r\n             \r\n\r\n                setProjects(response);\r\n            } catch (error) {\r\n                console.error(\"Error fetching manager projects: \", error);\r\n            }\r\n        }\r\n\r\n        fetchManagerProjects();\r\n    }, [managerName]);\r\n    return(\r\n        <React.Fragment>\r\n           \r\n           \r\n           \r\n             <table className=\"table\">\r\n                 <thead className=\"tableHeading\">\r\n                 <tr>\r\n                    <th>ProjectId</th>\r\n                     <th>Project Name</th>\r\n                     <th>Project Description</th>\r\n                     <th>Project Requirement</th>\r\n                     <th>Manager Assign Status</th>\r\n                     <th>Manager Name</th>\r\n                     <th>Employee Assign Status</th>\r\n                     <th>Employee Name</th>\r\n                     <th>Porject Created Date</th>\r\n                     <th>Project Assign Date</th>\r\n                     <th>Project Deadline</th>\r\n                     <th>Project Status</th>\r\n                     <th>Action</th>\r\n                 </tr>\r\n                 </thead>\r\n                 <tbody className=\"tableBody\">\r\n                     \r\n                 {projects.map((project, index) => (\r\n                    <React.Fragment key={project.id}>\r\n                      \r\n                      {managerName === projects.managerName && (\r\n                                <tr className=\"tableRow\">\r\n                                    <td>{project.id}</td>\r\n                                    <td>{project.name}</td>\r\n                                    <td>{project.description}</td>\r\n                                    <td>{project.requirement}</td>\r\n                                    <td>{project.managerAssignStatus}</td>\r\n                                    <td>{project.managerName}</td>\r\n                                    <td>{project.employeeAssignStatus}</td>\r\n                                    <td>{project.employeeName}</td>\r\n                                    <td>{project.projectCreatedDate}</td>\r\n                                    <td>{project.projectAssignDate}</td>\r\n                                    <td>{project.deadline}</td>\r\n                                    <td>{project.projectStatus}</td>\r\n                                    <td></td>\r\n                                </tr>\r\n                            )}\r\n                        \r\n                    </React.Fragment>\r\n))}\r\n\r\n\r\n                    \r\n                 </tbody>\r\n             </table>\r\n              \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ManagerProjectTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}